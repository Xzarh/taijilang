taiji language 0.1

  some macros for small code piece to check type
  by use macros, we can reduce function call and optimize the performance of the program

  macro definition will not generate code in the object code, but macro call will.

undefined? #= (obj) -> `((^obj)==undefined)
null? #= (obj) -> `((^obj)==null or (^obj)==undefined)
true? #= (obj) -> ` !!(^obj)
false? #= (obj) -> ` !(^obj)
boolean? #= (obj) -> ` (typeof (^obj) == "boolean")
number? #= (obj) -> `(Object::toString.call(^obj) == '[object Number]')
string? #= (obj) -> ` (Object::toString.call(^obj) == '[object String]')
array? #= (obj) -> ` (Object::toString.call(^obj) == '[object Array]')
object? #= (obj) -> ` (Object::toString.call(^obj) == '[object Object]')
function? #= (obj) -> ` (Object::toString.call(^obj) == '[object Function]')

isArray #= (obj) ->  (Object::toString.call(obj) == '[object Array]')